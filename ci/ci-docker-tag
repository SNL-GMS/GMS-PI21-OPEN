#!/bin/bash
set -o pipefail

# ------------------------------------------------------------------------------
# ci-docker-tag
# ------------------------------------------------------------------------------

SCRIPT_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" > /dev/null && pwd)"

source ${SCRIPT_DIR}/ci.env
source ${SCRIPT_DIR}/repository.env
source ${SCRIPT_DIR}/versions.env

#-- decouple from docker-ucp environment settings
unset DOCKER_HOST
unset DOCKER_TLS_VERIFY

print_usage() {
    echo "usage: ci-docker-tag --name NAME --source SOURCE [--push]"
    echo ""
    echo "description:"
    echo "  Pull and Tag (and optionally push) a docker image from external source with no modifications."
    echo "  Note the source image is always pulled."
    echo ""
    echo "arguments:"
    echo "    --name        Name of the docker image to build."
    echo "    --source      Full name and tag of the source image to tag."
    echo "    --push        Push the resulting image to the remote artifactory repo."
    echo ""
    echo "  The --push argument is typically only used by the automated CI pipeline to "
    echo "  push the build container to the docker registry specified by CI_DOCKER_REGISTRY."
    echo "  To push the environment variables CI_USER and CI_PASSWORD must be defined to "
    echo "  obtain access to the CI_DOCKER_REGISTRY."
    echo ""
    echo "examples:"
    echo "  # Tag the kafka container"
    echo "  $ ci-docker-tag --name kafka --source bitnami/kafka:7.0.1 --push"
    exit 0
}

if [ $# -eq 0 ]; then print_usage; fi

function echo_run() {
    echo ">> $@"
    eval time $@
    status=$?
    if [ ${status} -ne 0 ]; then echo "ERROR: failed with exit status ${status}"; exit ${status}; fi
}

# Parse our command-line arguments
while [ $# -gt 0 ]; do
    case "$1" in
        --name)       docker_image_name=$2;        shift 2;;
        --source)     docker_image_source=$2;      shift 2;;
        --push)       docker_push=1;               shift 1;;
        -h|--help) print_usage;                    shift 1;;
        *)  echo "ERROR: unrecognized option '$1'"; exit 1;;
    esac
done

if [ -z "${docker_image_name:-}" ]; then echo "ERROR: missing required --name argument"; exit 1; fi
if [ -z "${docker_image_source:-}" ]; then echo "ERROR: missing required --source argument"; exit 1; fi

#-- explicitly expand any escaped variables in image source and append tag postfix
docker_image_source=$(eval echo ${docker_image_source}${UPSTREAM_TAG_SUFFIX})

if [ ${CI_DEBUG:-} ]; then
    echo "DEBUG: docker_image_name=${docker_image_name}"
    echo "DEBUG: docker_image_source=${docker_image_source}"
    echo "DEBUG: docker_push=${docker_push}"
fi

echo "---------------------------------------------------------------------"
echo ""
echo "PULLING ${docker_image_source}"
echo ""
echo "---------------------------------------------------------------------"
echo_run docker pull ${docker_image_source}

echo "---------------------------------------------------------------------"
echo ""
echo "TAGGING ${docker_image_source}"
echo ""
echo "---------------------------------------------------------------------"
echo_run docker tag ${docker_image_source} ${CI_DOCKER_REGISTRY}/${CI_PROJECT_NAME}/${docker_image_name}:${DOCKER_IMAGE_TAG}
if [ "${DOCKER_IMAGE_TAG}" == "${CI_COMMIT_SHA}" ]; then
    #-- this is the normal case when building during CI
    echo_run docker tag ${docker_image_source} ${CI_DOCKER_REGISTRY}/${CI_PROJECT_NAME}/${docker_image_name}:${CI_COMMIT_REF_SLUG}
else
    #-- this case is when someone is building locally and manually sets DOCKER_IMAGE_TAG
    echo_run docker tag ${docker_image_source} ${CI_DOCKER_REGISTRY}/${CI_PROJECT_NAME}/${docker_image_name}:${CI_COMMIT_SHA}
fi

if [ ${docker_push:-0} == 1  ]; then
    if [ -n "${CI_USER:-}" ] && [ -n "${CI_PASSWORD:-}" ]; then
        echo "---------------------------------------------------------------------"
        echo ""
        echo "PUSHING ${CI_PROJECT_NAME}/${docker_image_name}"
        echo ""
        echo "---------------------------------------------------------------------"

        echo ">> docker login ${CI_DOCKER_REGISTRY} -u ${CI_USER} -p **************"
        docker login ${CI_DOCKER_REGISTRY} -u "${CI_USER}" -p "${CI_PASSWORD}"
        if [ ${status:=$?} -ne 0 ]; then echo "ERROR: failed with exit status ${status}"; exit ${status}; fi
        
        echo_run docker push ${CI_DOCKER_REGISTRY}/${CI_PROJECT_NAME}/${docker_image_name}:${DOCKER_IMAGE_TAG}

        if [ "${DOCKER_IMAGE_TAG}" == "${CI_COMMIT_SHA}" ]; then
            #-- this is the normal case when building during CI
            echo_run docker push ${CI_DOCKER_REGISTRY}/${CI_PROJECT_NAME}/${docker_image_name}:${CI_COMMIT_REF_SLUG}
        else
            #-- this case is when someone is building locally and manually sets DOCKER_IMAGE_TAG
            echo_run docker push ${CI_DOCKER_REGISTRY}/${CI_PROJECT_NAME}/${docker_image_name}:${CI_COMMIT_SHA}
        fi
    else
        echo "WARNING: CI_USER or CI_PASSWORD not defined in environment. Push ignored."
    fi
fi
exit 0
