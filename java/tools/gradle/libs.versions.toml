[versions]
apache-commons-lang3 = '3.12.0'
apache-commons-math3 = '3.6.1'
apache-commons-text = '1.9'
apache-httpclient = '4.5.12'
args4j = '2.33'
assertj-core = '3.22.0'
com-fasterxml-jackson-datatype = '2.13.3'
commons-cli = '1.5.0'
commons-io = '2.6'
equalsverifier = '3.10'
github-docker-java-version = '3.2.13'
github-ffpojo = '1.0'
github-tomakehurst-wiremock-jre8 = '2.33.2'
glassfish-javax-json = '1.1'
google-auto-value = '1.9'
google-guava = '31.1-jre'
hibernate-types-52 = '2.4.3'
h2database-h2 = '1.4.200'
javax-cache-api = '1.1.1'
javax-json-api = '1.1.2'
javax-persistence-api = '2.2'
javax-rs-api = '2.1.1'
javax-jaxb-api = '2.3.1'
jetcd-core = '0.7.1'
jmockit-jmockit = '1.49'
jmx-prometheus-javaagent = '0.16.1'
jodah-failsafe = '2.4.4'
micrometer-core = '1.9.0'
minio-minio = '8.4.1'
netty-all = '4.1.51.Final'
io-cucumber = '5.4.0'
io-projectreactor-base = '3.4.14'
io-projectreactor-blockhound = '1.0.4.RELEASE'
io-projectreactor-netty = '1.0.4'
io-projectreactor-kafka = '1.3.2'
io-projectreactor-test = '3.3.7.RELEASE'
logstash-logback-encoder = '7.1.1'
org-apache-ignite = '2.13.0'
org-apache-kafka-clients = '2.8.0'
org-hibernate = '5.4.30.Final'
org-hibernate-ecache = '5.4.30.Final'
org-junit-jupiter = '5.8.2'
org-mockito = '4.5.1'
org-msgpack = '0.9.1'
com-oracle-ojdbc8 = '19.3.0.0'
org-owasp-encoder = '1.2.3'
org-postgresql = '42.3.3'
org-slf4j-api = '1.7.32'
org-springdoc = '1.6.8'
org-springframework = '5.3.18'
springframework-boot = '2.5.12'
org-springframework-retry = '1.3.2'
org-testcontainers = '1.16.3'
org-quartzscheduler = '2.3.2'
logback-logback-classic = '1.2.11'
org-log4j2 = '2.17.2'
jacocoVersion = '0.8.3'
snakeyaml = '1.28'
swagger-core = '2.2.0'

[libraries]
args4j-args4j = { module = 'args4j:args4j', version.ref = 'args4j' }
ch-qos-logback-logback-classic = { module = 'ch.qos.logback:logback-classic', version.ref = 'logback-logback-classic' }
com-fasterxml-jackson-core-jackson-databind = { module = 'com.fasterxml.jackson.core:jackson-databind', version.ref = 'com-fasterxml-jackson-datatype' }
com-fasterxml-jackson-dataformat-jackson-dataformat-yaml = { module = 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml', version.ref = 'com-fasterxml-jackson-datatype' }
com-fasterxml-jackson-datatype-jackson-datatype-guava = { module = 'com.fasterxml.jackson.datatype:jackson-datatype-guava', version.ref = 'com-fasterxml-jackson-datatype' }
com-fasterxml-jackson-datatype-jackson-datatype-jdk8 = { module = 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8', version.ref = 'com-fasterxml-jackson-datatype' }
com-fasterxml-jackson-datatype-jackson-datatype-jsr310 = { module = 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310', version.ref = 'com-fasterxml-jackson-datatype' }
com-github-docker-java-docker-java-base = { module = 'com.github.docker-java:docker-java', version.ref = 'github-docker-java-version' }
com-github-docker-java-docker-java-core = { module = 'com.github.docker-java:docker-java-core', version.ref = 'github-docker-java-version' }
com-github-docker-java-docker-java-transport-httpclient5 = { module = 'com.github.docker-java:docker-java-transport-httpclient5', version.ref = 'github-docker-java-version' }
com-github-ffpojo-ffpojo = { module = 'com.github.ffpojo:ffpojo', version.ref = 'github-ffpojo' }
com-github-tomakehurst-wiremock-jre8 = { module = 'com.github.tomakehurst:wiremock-jre8', version.ref = 'github-tomakehurst-wiremock-jre8' }
com-google-auto-value-auto-value-base = { module = 'com.google.auto.value:auto-value', version.ref = 'google-auto-value' }
com-google-auto-value-auto-value-annotations = { module = 'com.google.auto.value:auto-value-annotations', version.ref = 'google-auto-value' }
com-google-guava-guava = { module = 'com.google.guava:guava', version.ref = 'google-guava' }
com-h2database-h2 = { module = 'com.h2database:h2', version.ref = 'h2database-h2' }
com-oracle-ojdbc-ojdbc8 = { module = 'com.oracle.ojdbc:ojdbc8', version.ref = 'com-oracle-ojdbc8' }
com-vladmihalcea-hibernate-types52 = { module = 'com.vladmihalcea:hibernate-types-52', version.ref = 'hibernate-types-52' }
commons-cli-commons-cli = { module = 'commons-cli:commons-cli', version.ref = 'commons-cli' }
commons-io-commons-io = { module = 'commons-io:commons-io', version.ref = 'commons-io' }
io-cucumber-cucumber-java = { module = 'io.cucumber:cucumber-java', version.ref = 'io-cucumber' }
io-cucumber-cucumber-picocontainer = { module = 'io.cucumber:cucumber-picocontainer', version.ref = 'io-cucumber' }
io-etcd-jetcd-core = { module = 'io.etcd:jetcd-core', version.ref = 'jetcd-core' }
io-micrometer-micrometer-core = { module = 'io.micrometer:micrometer-core', version.ref = 'micrometer-core' }
io-minio-minio = { module = 'io.minio:minio', version.ref = 'minio-minio' }
io-projectreactor-kafka-reactor-kafka = { module = 'io.projectreactor.kafka:reactor-kafka', version.ref = 'io-projectreactor-kafka' }
io-projectreactor-netty-reactor-netty = { module = 'io.projectreactor.netty:reactor-netty', version.ref = 'io-projectreactor-netty' }
io-projectreactor-reactor-core = { module = 'io.projectreactor:reactor-core', version.ref = 'io-projectreactor-base' }
io-projectreactor-reactor-test = { module = 'io.projectreactor:reactor-test', version.ref = 'io-projectreactor-test' }
io-projectreactor-reactor-tools = { module = 'io.projectreactor:reactor-tools', version.ref = 'io-projectreactor-base' }
io-projectreactor-tools-blockhound = { module = 'io.projectreactor.tools:blockhound', version.ref = 'io-projectreactor-blockhound' }
io-prometheus-jmx-jmx_prometheus_javaagent = { module = 'io.prometheus.jmx:jmx_prometheus_javaagent', version.ref = 'jmx-prometheus-javaagent' }
io-swagger-core-v3-swagger-core = { module = 'io.swagger.core.v3:swagger-core', version.ref = 'swagger-core' }
javax-cache-cache-api = { module = 'javax.cache:cache-api', version.ref = 'javax-cache-api' }
javax-json-javax-json-api = { module = 'javax.json:javax.json-api', version.ref = 'javax-json-api' }
javax-persistence-javax-persistence-api = { module = 'javax.persistence:javax.persistence-api', version.ref = 'javax-persistence-api' }
javax-ws-rs-javax-ws-rs-api = { module = 'javax.ws.rs:javax.ws.rs-api', version.ref = 'javax-rs-api' }
javax-xml-bind-jaxb-api = { module = 'javax.xml.bind:jaxb-api', version.ref = 'javax-jaxb-api' }
net-jodah-failsafe = { module = 'net.jodah:failsafe', version.ref = 'jodah-failsafe' }
net-logstash-logback-logstash-logback-encoder = { module = 'net.logstash.logback:logstash-logback-encoder', version.ref = 'logstash-logback-encoder' }
nl-jqno-equalsverifier = { module = 'nl.jqno.equalsverifier:equalsverifier', version.ref = 'equalsverifier' }
org-apache-commons-commons-lang3 = { module = 'org.apache.commons:commons-lang3', version.ref = 'apache-commons-lang3' }
org-apache-commons-commons-math3 = { module = 'org.apache.commons:commons-math3', version.ref = 'apache-commons-math3' }
org-apache-commons-commons-text = { module = 'org.apache.commons:commons-text', version.ref = 'apache-commons-text' }
org-apache-httpcomponents-httpclient = { module = 'org.apache.httpcomponents:httpclient', version.ref = 'apache-httpclient' }
org-apache-ignite-ignite-core = { module = 'org.apache.ignite:ignite-core', version.ref = 'org-apache-ignite' }
org-apache-ignite-ignite-kubernetes = { module = 'org.apache.ignite:ignite-kubernetes', version.ref = 'org-apache-ignite' }
org-apache-ignite-ignite-slf4j = { module = 'org.apache.ignite:ignite-slf4j', version.ref = 'org-apache-ignite' }
org-apache-ignite-ignite-visor-console = { module = 'org.apache.ignite:ignite-visor-console', version.ref = 'org-apache-ignite' }
org-apache-kafka-kafka-clients = { module = 'org.apache.kafka:kafka-clients', version.ref = 'org-apache-kafka-clients' }
org-apache-logging-log4j-log4j-core = { module = 'org.apache.logging.log4j:log4j-core', version.ref = 'org-log4j2' }
org-apache-logging-log4j-log4j-slf4j-impl = { module = 'org.apache.logging.log4j:log4j-slf4j-impl', version.ref = 'org-log4j2' }
org-apache-logging-log4j-log4j-to-slf4j = { module = 'org.apache.logging.log4j:log4j-to-slf4j', version.ref = 'org-log4j2' }
org-assertj-assertj-core = { module = 'org.assertj:assertj-core', version.ref = 'assertj-core' }
org-glassfish-javax-json = { module = 'org.glassfish:javax.json', version.ref = 'glassfish-javax-json' }
org-hibernate-hibernate-c3p0 = { module = 'org.hibernate:hibernate-c3p0', version.ref = 'org-hibernate' }
org-hibernate-hibernate-core = { module = 'org.hibernate:hibernate-core', version.ref = 'org-hibernate' }
org-hibernate-hibernate-ehcache = { module = 'org.hibernate:hibernate-ehcache', version.ref = 'org-hibernate-ecache' }
org-hibernate-hibernate-entitymanager = { module = 'org.hibernate:hibernate-entitymanager', version.ref = 'org-hibernate' }
org-jmockit = { module = 'org.jmockit:jmockit', version.ref = 'jmockit-jmockit' }
org-junit-jupiter-junit-jupiter-base = { module = 'org.junit.jupiter:junit-jupiter', version.ref = 'org-junit-jupiter' }
org-junit-jupiter-junit-jupiter-api = { module = 'org.junit.jupiter:junit-jupiter-api', version.ref = 'org-junit-jupiter' }
org-junit-jupiter-junit-jupiter-params = { module = 'org.junit.jupiter:junit-jupiter-params', version.ref = 'org-junit-jupiter' }
org-junit-jupiter-junit-jupiter-engine = { module = 'org.junit.jupiter:junit-jupiter-engine', version.ref = 'org-junit-jupiter' }
org-mockito-mockito-core = { module = 'org.mockito:mockito-core', version.ref = 'org-mockito' }
org-mockito-mockito-inline = { module = 'org.mockito:mockito-inline', version.ref = 'org-mockito' }
org-mockito-mockito-junit-jupiter = { module = 'org.mockito:mockito-junit-jupiter', version.ref = 'org-mockito' }
org-msgpack-jackson-dataformat-msgpack = { module = 'org.msgpack:jackson-dataformat-msgpack', version.ref = 'org-msgpack' }
org-msgpack-msgpack-core = { module = 'org.msgpack:msgpack-core', version.ref = 'org-msgpack' }
org-owasp-encoder-encoder = { module = 'org.owasp.encoder:encoder', version.ref = 'org-owasp-encoder' }
org-postgresql-postgresql = { module = 'org.postgresql:postgresql', version.ref = 'org-postgresql' }
org-slf4j-slf4j-api = { module = 'org.slf4j:slf4j-api', version.ref = 'org-slf4j-api' }
org-springdoc-springdoc-openapi-ui = { module = 'org.springdoc:springdoc-openapi-ui', version.ref = 'org-springdoc' }
org-springframework-boot-spring-boot-dependencies = { module = 'org.springframework.boot:spring-boot-dependencies', version.ref = 'springframework-boot' }
org-springframework-boot-spring-boot-starter = { module = 'org.springframework.boot:spring-boot-starter', version.ref = 'springframework-boot' }
org-springframework-boot-spring-boot-starter-aop = { module = 'org.springframework.boot:spring-boot-starter-aop', version.ref = 'springframework-boot' }
org-springframework-boot-spring-boot-starter-data-jpa = { module = 'org.springframework.boot:spring-boot-starter-data-jpa', version.ref = 'springframework-boot' }
org-springframework-boot-spring-boot-starter-test = { module = 'org.springframework.boot:spring-boot-starter-test', version.ref = 'springframework-boot' }
org-springframework-boot-spring-boot-starter-web = { module = 'org.springframework.boot:spring-boot-starter-web', version.ref = 'springframework-boot' }
org-springframework-retry-spring-retry = { module = 'org.springframework.retry:spring-retry', version.ref = 'org-springframework-retry' }
org-springframework-spring-beans = { module = 'org.springframework:spring-beans', version.ref = 'org-springframework' }
org-springframework-spring-context = { module = 'org.springframework:spring-context', version.ref = 'org-springframework' }
org-springframework-spring-webflux = { module = 'org.springframework:spring-webflux', version.ref = 'org-springframework' }
org-testcontainers-testcontainers = { module = 'org.testcontainers:testcontainers', version.ref = 'org-testcontainers' }
org-testcontainers-junit-jupiter = { module = 'org.testcontainers:junit-jupiter', version.ref = 'org-testcontainers' }
org-testcontainers-kafka = { module = 'org.testcontainers:kafka', version.ref = 'org-testcontainers' }
org-testcontainers-postgresql = { module = 'org.testcontainers:postgresql', version.ref = 'org-testcontainers' }
org-quartz-scheduler-quartz = { module = 'org.quartz-scheduler:quartz', version.ref = 'org-quartzscheduler' }
org-yaml-snakeyaml = { module = 'org.yaml:snakeyaml', version.ref = 'snakeyaml' }

[plugins]
com-palantir-docker = 'com.palantir.docker:0.33.0'
io-swagger-core-v3-swagger-gradle = 'io.swagger.core.v3.swagger-gradle-plugin:2.2.0'
org-sonarqube = 'org.sonarqube:3.3'
org-springframework-boot = 'org.springframework.boot:2.4.5'
