env:
  browser: true
  es6: true
  commonjs: true
  node: true
  mocha: true
  jest: true
plugins:
  - '@blueprintjs' # @blueprintjs/eslint-plugin
  - '@typescript-eslint' # @typescript-eslint/eslint-plugin
  - jsdoc # eslint-plugin-jsdoc
  - no-null # eslint-plugin-no-null
  - prefer-arrow # eslint-plugin-prefer-arrow
  - simple-import-sort # eslint-plugin-simple-import-sort
  - react # eslint-plugin-react
  - unicorn # eslint-plugin-unicorn
  - import # eslint-plugin-import
  - jsx-a11y # eslint-plugin-jsx-a11y
  - workspaces # eslint-plugin-workspaces
  - jest # eslint-plugin-jest
  - prettier # eslint-plugin-prettier
extends:
  # - "plugin:jsdoc/recommended"
  - airbnb
  - airbnb/hooks
  - plugin:@blueprintjs/recommended
  - plugin:@typescript-eslint/recommended
  - plugin:react/recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/typescript
  - plugin:workspaces/recommended
  - plugin:jest/recommended
  - plugin:prettier/recommended
  - prettier/prettier

globals:
  Atomics: readonly
  SharedArrayBuffer: readonly
parser: '@typescript-eslint/parser'
parserOptions:
  project: ./tsconfig.json
  ecmaFeatures:
    jsx: true
  ecmaVersion: 2018
  sourceType: module
settings:
  react:
    - version: 'detect' # tells eslint-plugin-react to automatically detect the version of React to use
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  import/resolver:
    node:
      paths:
        - node_modules
        - src
      moduleDirectory:
        - node_modules
        - src/
      extensions:
        - .js
        - .jsx
        - .ts
        - .tsx
        - .json
    typescript:
      alwaysTryTypes: true
      project:
        - tsconfig.json
    eslint-import-resolver-custom-alias:
      alias:
        # alias for ui-app package
        '~analyst-ui': 'src/ts/components/analyst-ui'
        '~app': 'src/ts/app'
        '~config': 'src/ts/config'
        '~env': 'src/ts/env'
        '~common-ui': 'src/ts/components/common-ui'
        '~components': 'src/ts/components'
        '~css': 'src/css'
        '~data-acquisition-ui': 'src/ts/components/data-acquisition-ui'
        '~resources': 'src/ts/resources'
        '~scss-config': 'src/ts/scss-config'
      extensions:
        - '.ts'
        - '.tsx'
        - '.scss'
      packages:
        - 'packages/*'
rules:
  'react/require-default-props': off
  'react/static-property-placement':
    - warn
  '@blueprintjs/no-deprecated-components': warn
  '@typescript-eslint/naming-convention':
    - error
    - selector: variable
      format:
        - camelCase
        - UPPER_CASE
        - PascalCase
  '@typescript-eslint/no-shadow': error
  '@typescript-eslint/no-use-before-define': [error]
  '@typescript-eslint/no-unused-vars': error
  '@typescript-eslint/consistent-type-imports': error
  '@typescript-eslint/no-duplicate-imports': [error]
  '@typescript-eslint/array-type':
    - error
    - default: array
  '@typescript-eslint/await-thenable': error
  '@typescript-eslint/consistent-type-assertions': error
  '@typescript-eslint/consistent-type-definitions': error
  '@typescript-eslint/dot-notation': error
  '@typescript-eslint/explicit-member-accessibility':
    - error
    - accessibility: explicit
      overrides:
        constructors: explicit
  '@typescript-eslint/no-extraneous-class': error
  '@typescript-eslint/no-floating-promises': error
  '@typescript-eslint/no-for-in-array': error
  '@typescript-eslint/no-non-null-assertion': error
  '@typescript-eslint/no-magic-numbers':
    - error
    - ignoreDefaultValues: true
      ignoreEnums: true
      ignoreReadonlyClassProperties: true
      ignore:
        - -1
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 255
        - 100
        - 1000
  '@typescript-eslint/no-require-imports': error
  '@typescript-eslint/no-unnecessary-boolean-literal-compare': error
  '@typescript-eslint/no-unnecessary-type-assertion': error
  '@typescript-eslint/no-unused-expressions':
    - error
    - allowTaggedTemplates: true
      allowShortCircuit: true
  '@typescript-eslint/prefer-for-of': error
  '@typescript-eslint/prefer-readonly': error
  '@typescript-eslint/promise-function-async': error
  '@typescript-eslint/require-await': error
  '@typescript-eslint/restrict-plus-operands': error
  '@typescript-eslint/triple-slash-reference':
    - error
    - path: always
      types: prefer-import
      lib: always
  '@typescript-eslint/unbound-method': error
  '@typescript-eslint/unified-signatures': error
  complexity: error
  constructor-super: error
  id-blacklist:
    - error
    - any
    - Number
    - number
    - String
    - string
    - Boolean
    - boolean
    - Undefined
    - undefined
  id-match: error
  import/no-default-export: error
  jsdoc/check-alignment: error
  jsdoc/newline-after-description: error
  jsdoc/no-types: error
  no-duplicate-imports: off
  no-magic-numbers: off
  no-null/no-null: 'off'
  no-trailing-spaces: error
  unicorn/filename-case: error
  arrow-parens:
    - error
    - as-needed
  camelcase: off
  jest/no-disabled-tests: warn
  jest/no-focused-tests: error
  jest/no-identical-title: error
  jest/prefer-to-have-length: warn
  jest/valid-expect: warn
  jest/no-standalone-expect: warn
  react/jsx-filename-extension:
    - error
    - extensions:
        - '.jsx'
        - '.tsx'
  import/extensions:
    - off
    - ignorePackages
    - js: never
      jsx: never
      ts: never
      tsx: never
  import/order: off
  import/prefer-default-export: off
  no-param-reassign:
    - warn
    - props: true
      ignorePropertyModificationsFor:
        - draft
        - state
  no-shadow: off
  no-use-before-define: off
  no-unused-vars: off
  simple-import-sort/imports: error
  simple-import-sort/exports: error
  sort-imports: off
  react/prop-types: [1, { ignore: ['children'] }]
  react/no-unused-prop-types: warn
  react/no-unused-class-component-methods: warn
  padding-line-between-statements:
    - error
    - blankLine: always
      prev: '*'
      next: function
  prettier/prettier:
    - error
    - singleQuote: true
      printWidth: 100
      tabWidth: 2
      useTabs: false
      trailingComma: none
      arrowParens: avoid
  'no-restricted-imports':
    [
      error,
      {
        paths: [{ name: 'lodash', message: 'Import [module] from lodash/[module] instead' }],
        patterns:
          [
            {
              group: ['@gms/*/src/*', '../lib/*', '../**/lib/*'],
              message: 'Please use module from @gms/[package-name]/lib instead.',
            },
          ],
      },
    ]
